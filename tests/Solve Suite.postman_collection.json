{
	"info": {
		"_postman_id": "e8a19ff3-5c6e-470a-9b54-bb78356f9e3e",
		"name": "Solve Suite",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Solve a puzzle with missing puzzle string",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response is { \\\"error\\\": \\\"required field missing\\\"}\", function () {\r",
							"     var my_json = pm.response.json();\r",
							"    pm.expect(my_json).to.be.an(\"object\");\r",
							"    pm.expect(my_json).to.have.property(\"error\");\r",
							"    pm.expect(my_json.error).to.be.eql(\"Required field missing\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://boilerplate-project-sudoku-solver.alevanni.repl.co/api/solve",
					"protocol": "https",
					"host": [
						"boilerplate-project-sudoku-solver",
						"alevanni",
						"repl",
						"co"
					],
					"path": [
						"api",
						"solve"
					]
				}
			},
			"response": []
		},
		{
			"name": "Solve a puzzle with valid puzzle string",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var my_json = pm.response.json();\r",
							"    pm.expect(my_json).to.have.property(\"solution\");\r",
							"    pm.expect(my_json.solution).to.be.eql(\"135762984946381257728459613694517832812936745357824196473298561581673429269145378\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "puzzle",
							"value": "1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://boilerplate-project-sudoku-solver.alevanni.repl.co/api/solve",
					"protocol": "https",
					"host": [
						"boilerplate-project-sudoku-solver",
						"alevanni",
						"repl",
						"co"
					],
					"path": [
						"api",
						"solve"
					]
				}
			},
			"response": []
		},
		{
			"name": "Solve a puzzle with invalid characters",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var my_json = pm.response.json();\r",
							"    pm.expect(my_json).to.have.property(\"error\");\r",
							"    pm.expect(my_json.error).to.be.eql(\"Invalid characters in puzzle\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "puzzle",
							"value": "..9..o.1.85.4....2432......1...69.83.9.....6.62.71...9......1945....4.37.4.3..6..",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://boilerplate-project-sudoku-solver.alevanni.repl.co/api/solve",
					"protocol": "https",
					"host": [
						"boilerplate-project-sudoku-solver",
						"alevanni",
						"repl",
						"co"
					],
					"path": [
						"api",
						"solve"
					]
				}
			},
			"response": []
		},
		{
			"name": "Solve a puzzle with incorrect length",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var my_json = pm.response.json();\r",
							"    pm.expect(my_json).to.have.property(\"error\");\r",
							"    pm.expect(my_json.error).to.be.eql(\"Expected puzzle to be 81 characters long\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "puzzle",
							"value": "..9..5.1.85.4....2432......1...69.83.9.....9......1945....4.37.4.3..6..",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://boilerplate-project-sudoku-solver.alevanni.repl.co/api/solve",
					"protocol": "https",
					"host": [
						"boilerplate-project-sudoku-solver",
						"alevanni",
						"repl",
						"co"
					],
					"path": [
						"api",
						"solve"
					]
				}
			},
			"response": []
		},
		{
			"name": "Solve a puzzle that cannot be solved",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var my_json = pm.response.json();\r",
							"    pm.expect(my_json).to.have.property(\"error\");\r",
							"    pm.expect(my_json.error).to.be.eql(\"Puzzle cannot be solved\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "puzzle",
							"value": "1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....923914.67.",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "https://boilerplate-project-sudoku-solver.alevanni.repl.co/api/solve",
					"protocol": "https",
					"host": [
						"boilerplate-project-sudoku-solver",
						"alevanni",
						"repl",
						"co"
					],
					"path": [
						"api",
						"solve"
					]
				}
			},
			"response": []
		}
	]
}